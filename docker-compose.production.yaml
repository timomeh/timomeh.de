version: '3.9'

services:
  app:
    image: ghcr.io/timomeh/timomeh.de:latest
    pull_policy: always
    healthcheck:
      test:
        - CMD-SHELL
        - |
          node -e "
            require('http').get('http://localhost:3000/-ah/up', res => {
              let data = '';
              res.on('data', chunk => data += chunk);
              res.on('end', () => {
                if (res.statusCode !== 200 || data.trim() !== 'OK') process.exit(1);
              });
            }).on('error', () => process.exit(1));
          "
      interval: 5s
      timeout: 2s
      retries: 12
    ports:
      - 3000:3000
    volumes:
      - optim-image-cache:/app/.next/cache/images
      - raw-image-cache:/app/.next/cache/raw-content-images
      - db-data:/app/db-data

  # starts on production, migrates the database, and then exits
  migrate:
    build:
      context: .
      dockerfile_inline: |
        FROM node:22-slim AS base
        ENV PNPM_HOME="/pnpm"
        ENV PATH="$PNPM_HOME:$PATH"
        COPY package.json ./
        RUN corepack enable && corepack prepare --activate
        WORKDIR /app

        FROM base AS deps
        COPY package.json pnpm-lock.yaml* .npmrc* ./
        RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

        FROM base
        RUN addgroup --system --gid 1001 nodejs
        RUN adduser --system --uid 1001 nextjs
        COPY . .
        COPY --from=deps --chown=nextjs:nodejs /app/node_modules /app/node_modules
        RUN mkdir -p /app/db-data && chown -R nextjs:nodejs /app/db-data
        USER nextjs
        CMD ["npx", "drizzle-kit", "push", "--force"]
    restart: no
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - db-data:/app/db-data
