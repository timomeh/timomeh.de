name: main
on:
  push:
    branches: [main]

# Limit the concurrency of the whole main pipeline to prevent
# race conditions in back-to-back workflow runs
concurrency:
  group: deploy_production

jobs:
  ci:
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  publish-release:
    runs-on: ubuntu-latest
    needs: ci
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    environment:
      name: production
      url: https://timomeh.de
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp
      - run: docker load -i /tmp/docker-image.tar
      - name: publish
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      - name: release
        run: ./bin/release-latest.sh
        timeout-minutes: 10 # This should only take a few seconds
        env:
          COOLIFY_DEPLOY_WEBHOOK_URL: ${{ secrets.COOLIFY_WEBHOOK }}
          COOLIFY_DEPLOY_STATUS_URL: ${{ secrets.COOLIFY_STATUS }}
          COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN }}
